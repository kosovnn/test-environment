/* SPDX-License-Identifier: Apache-2.0 */
/* Copyright (C) 2004-2022 OKTET Labs Ltd. All rights reserved. */
/** @file
 * @brief PCI constant definitions.
 *
 * This file uses a technique sometimes called an "X-trick":
 * the file may be included several times with varying macro
 * definitions, thus providing definitions for several entities,
 * such as enums, mapping tables etc from a single source.
 *
 * So it is intended to be used like this:
 * @code{.c}
 * #define STARTDEF(_name) typedef enum te_pci_##_name {
 * #define ENDDEF(_name) } te_pci_##_name;
 * #define ITEM(_key, _value) TE_PCI_##_key = (_value),
 * #include "te_pci_ids.h"
 * #undef ITEM
 * #undef ENDDEF
 * #undef STARTDEF
 * @endcode
 *
 * The actual data are obtained semi-automatically from
 * PCI ids database, see http://pci-ids.ucw.cz/.
 *
 * @remark
 * The header of the PCI ids file claims that:
 *
 * > The database is a compilation of factual data, and as such the copyright
 * > only covers the aggregation and formatting.
 *
 * and we do not include the file as such, so we're basically free of their
 * copyright.
 *
 * @attention As the file is intended to be included multiple
 * times, it **must not** have the header guards.
 */
#if !defined(STARTDEF) || !defined(ENDDEF) || !defined(ITEM)
#error "The contract of the file is not satisifed"
#endif

STARTDEF(class)
    ITEM(CLASS_UNCLASSIFIED_DEVICE, 0x00)
    ITEM(CLASS_MASS_STORAGE_CONTROLLER, 0x01)
    ITEM(CLASS_NETWORK_CONTROLLER, 0x02)
    ITEM(CLASS_DISPLAY_CONTROLLER, 0x03)
    ITEM(CLASS_MULTIMEDIA_CONTROLLER, 0x04)
    ITEM(CLASS_MEMORY_CONTROLLER, 0x05)
    ITEM(CLASS_BRIDGE, 0x06)
    ITEM(CLASS_COMMUNICATION_CONTROLLER, 0x07)
    ITEM(CLASS_GENERIC_SYSTEM_PERIPHERAL, 0x08)
    ITEM(CLASS_INPUT_DEVICE_CONTROLLER, 0x09)
    ITEM(CLASS_DOCKING_STATION, 0x0a)
    ITEM(CLASS_PROCESSOR, 0x0b)
    ITEM(CLASS_SERIAL_BUS_CONTROLLER, 0x0c)
    ITEM(CLASS_WIRELESS_CONTROLLER, 0x0d)
    ITEM(CLASS_INTELLIGENT_CONTROLLER, 0x0e)
    ITEM(CLASS_SATELLITE_COMMUNICATIONS_CONTROLLER, 0x0f)
    ITEM(CLASS_ENCRYPTION_CONTROLLER, 0x10)
    ITEM(CLASS_SIGNAL_PROCESSING_CONTROLLER, 0x11)
    ITEM(CLASS_PROCESSING_ACCELERATORS, 0x12)
    ITEM(CLASS_NON_ESSENTIAL_INSTRUMENTATION, 0x13)
    ITEM(CLASS_COPROCESSOR, 0x40)
    ITEM(CLASS_UNASSIGNED_CLASS, 0xff)
ENDDEF(class)

STARTDEF(subclass)
/* Unclassified Device */
    ITEM(SUBCLASS_NON_VGA_UNCLASSIFIED_DEVICE, 0x0000)
    ITEM(SUBCLASS_VGA_COMPATIBLE_UNCLASSIFIED_DEVICE, 0x0001)
    ITEM(SUBCLASS_IMAGE_COPROCESSOR, 0x0005)
/* Mass Storage Controller */
    ITEM(SUBCLASS_SCSI_STORAGE_CONTROLLER, 0x0100)
    ITEM(SUBCLASS_IDE_INTERFACE, 0x0101)
    ITEM(SUBCLASS_FLOPPY_DISK_CONTROLLER, 0x0102)
    ITEM(SUBCLASS_IPI_BUS_CONTROLLER, 0x0103)
    ITEM(SUBCLASS_RAID_BUS_CONTROLLER, 0x0104)
    ITEM(SUBCLASS_ATA_CONTROLLER, 0x0105)
    ITEM(SUBCLASS_SATA_CONTROLLER, 0x0106)
    ITEM(SUBCLASS_SERIAL_ATTACHED_SCSI_CONTROLLER, 0x0107)
    ITEM(SUBCLASS_NON_VOLATILE_MEMORY_CONTROLLER, 0x0108)
    ITEM(SUBCLASS_MASS_STORAGE_CONTROLLER, 0x0180)
/* Network Controller */
    ITEM(SUBCLASS_ETHERNET_CONTROLLER, 0x0200)
    ITEM(SUBCLASS_TOKEN_RING_NETWORK_CONTROLLER, 0x0201)
    ITEM(SUBCLASS_FDDI_NETWORK_CONTROLLER, 0x0202)
    ITEM(SUBCLASS_ATM_NETWORK_CONTROLLER, 0x0203)
    ITEM(SUBCLASS_ISDN_CONTROLLER, 0x0204)
    ITEM(SUBCLASS_WORLDFIP_CONTROLLER, 0x0205)
    ITEM(SUBCLASS_PICMG_CONTROLLER, 0x0206)
    ITEM(SUBCLASS_INFINIBAND_CONTROLLER, 0x0207)
    ITEM(SUBCLASS_FABRIC_CONTROLLER, 0x0208)
    ITEM(SUBCLASS_NETWORK_CONTROLLER, 0x0280)
/* Display Controller */
    ITEM(SUBCLASS_VGA_COMPATIBLE_CONTROLLER, 0x0300)
    ITEM(SUBCLASS_XGA_COMPATIBLE_CONTROLLER, 0x0301)
    ITEM(SUBCLASS_3D_CONTROLLER, 0x0302)
    ITEM(SUBCLASS_DISPLAY_CONTROLLER, 0x0380)
/* Multimedia Controller */
    ITEM(SUBCLASS_MULTIMEDIA_VIDEO_CONTROLLER, 0x0400)
    ITEM(SUBCLASS_MULTIMEDIA_AUDIO_CONTROLLER, 0x0401)
    ITEM(SUBCLASS_COMPUTER_TELEPHONY_DEVICE, 0x0402)
    ITEM(SUBCLASS_AUDIO_DEVICE, 0x0403)
    ITEM(SUBCLASS_MULTIMEDIA_CONTROLLER, 0x0480)
/* Memory Controller */
    ITEM(SUBCLASS_RAM_MEMORY, 0x0500)
    ITEM(SUBCLASS_FLASH_MEMORY, 0x0501)
    ITEM(SUBCLASS_MEMORY_CONTROLLER, 0x0580)
/* Bridge */
    ITEM(SUBCLASS_HOST_BRIDGE, 0x0600)
    ITEM(SUBCLASS_ISA_BRIDGE, 0x0601)
    ITEM(SUBCLASS_EISA_BRIDGE, 0x0602)
    ITEM(SUBCLASS_MICROCHANNEL_BRIDGE, 0x0603)
    ITEM(SUBCLASS_PCI_BRIDGE, 0x0604)
    ITEM(SUBCLASS_PCMCIA_BRIDGE, 0x0605)
    ITEM(SUBCLASS_NUBUS_BRIDGE, 0x0606)
    ITEM(SUBCLASS_CARDBUS_BRIDGE, 0x0607)
    ITEM(SUBCLASS_RACEWAY_BRIDGE, 0x0608)
    ITEM(SUBCLASS_SEMI_TRANSPARENT_PCI_TO_PCI_BRIDGE, 0x0609)
    ITEM(SUBCLASS_INFINIBAND_TO_PCI_HOST_BRIDGE, 0x060a)
    ITEM(SUBCLASS_BRIDGE, 0x0680)
/* Communication Controller */
    ITEM(SUBCLASS_SERIAL_CONTROLLER, 0x0700)
    ITEM(SUBCLASS_PARALLEL_CONTROLLER, 0x0701)
    ITEM(SUBCLASS_MULTIPORT_SERIAL_CONTROLLER, 0x0702)
    ITEM(SUBCLASS_MODEM, 0x0703)
    ITEM(SUBCLASS_GPIB_CONTROLLER, 0x0704)
    ITEM(SUBCLASS_SMARD_CARD_CONTROLLER, 0x0705)
    ITEM(SUBCLASS_COMMUNICATION_CONTROLLER, 0x0780)
/* Generic System Peripheral */
    ITEM(SUBCLASS_PIC, 0x0800)
    ITEM(SUBCLASS_DMA_CONTROLLER, 0x0801)
    ITEM(SUBCLASS_TIMER, 0x0802)
    ITEM(SUBCLASS_RTC, 0x0803)
    ITEM(SUBCLASS_PCI_HOT_PLUG_CONTROLLER, 0x0804)
    ITEM(SUBCLASS_SD_HOST_CONTROLLER, 0x0805)
    ITEM(SUBCLASS_IOMMU, 0x0806)
    ITEM(SUBCLASS_SYSTEM_PERIPHERAL, 0x0880)
    ITEM(SUBCLASS_TIMING_CARD, 0x0899)
/* Input Device Controller */
    ITEM(SUBCLASS_KEYBOARD_CONTROLLER, 0x0900)
    ITEM(SUBCLASS_DIGITIZER_PEN, 0x0901)
    ITEM(SUBCLASS_MOUSE_CONTROLLER, 0x0902)
    ITEM(SUBCLASS_SCANNER_CONTROLLER, 0x0903)
    ITEM(SUBCLASS_GAMEPORT_CONTROLLER, 0x0904)
    ITEM(SUBCLASS_INPUT_DEVICE_CONTROLLER, 0x0980)
/* Docking Station */
    ITEM(SUBCLASS_GENERIC_DOCKING_STATION, 0x0a00)
    ITEM(SUBCLASS_DOCKING_STATION, 0x0a80)
/* Processor */
    ITEM(SUBCLASS_386, 0x0b00)
    ITEM(SUBCLASS_486, 0x0b01)
    ITEM(SUBCLASS_PENTIUM, 0x0b02)
    ITEM(SUBCLASS_ALPHA, 0x0b10)
    ITEM(SUBCLASS_POWER_PC, 0x0b20)
    ITEM(SUBCLASS_MIPS, 0x0b30)
    ITEM(SUBCLASS_CO_PROCESSOR, 0x0b40)
/* Serial Bus Controller */
    ITEM(SUBCLASS_FIREWIRE, 0x0c00)
    ITEM(SUBCLASS_ACCESS_BUS, 0x0c01)
    ITEM(SUBCLASS_SSA, 0x0c02)
    ITEM(SUBCLASS_USB_CONTROLLER, 0x0c03)
    ITEM(SUBCLASS_FIBRE_CHANNEL, 0x0c04)
    ITEM(SUBCLASS_SMBUS, 0x0c05)
    ITEM(SUBCLASS_INFINIBAND, 0x0c06)
    ITEM(SUBCLASS_IPMI_INTERFACE, 0x0c07)
    ITEM(SUBCLASS_SERCOS_INTERFACE, 0x0c08)
    ITEM(SUBCLASS_CANBUS, 0x0c09)
/* Wireless Controller */
    ITEM(SUBCLASS_IRDA_CONTROLLER, 0x0d00)
    ITEM(SUBCLASS_CONSUMER_IR_CONTROLLER, 0x0d01)
    ITEM(SUBCLASS_RF_CONTROLLER, 0x0d10)
    ITEM(SUBCLASS_BLUETOOTH, 0x0d11)
    ITEM(SUBCLASS_BROADBAND, 0x0d12)
    ITEM(SUBCLASS_8021A_CONTROLLER, 0x0d20)
    ITEM(SUBCLASS_8021B_CONTROLLER, 0x0d21)
    ITEM(SUBCLASS_WIRELESS_CONTROLLER, 0x0d80)
/* Intelligent Controller */
    ITEM(SUBCLASS_I2O, 0x0e00)
/* Satellite Communications Controller */
    ITEM(SUBCLASS_SATELLITE_TV_CONTROLLER, 0x0f01)
    ITEM(SUBCLASS_SATELLITE_AUDIO_COMMUNICATION_CONTROLLER, 0x0f02)
    ITEM(SUBCLASS_SATELLITE_VOICE_COMMUNICATION_CONTROLLER, 0x0f03)
    ITEM(SUBCLASS_SATELLITE_DATA_COMMUNICATION_CONTROLLER, 0x0f04)
/* Encryption Controller */
    ITEM(SUBCLASS_NETWORK_AND_COMPUTING_ENCRYPTION_DEVICE, 0x1000)
    ITEM(SUBCLASS_ENTERTAINMENT_ENCRYPTION_DEVICE, 0x1010)
    ITEM(SUBCLASS_ENCRYPTION_CONTROLLER, 0x1080)
/* Signal Processing Controller */
    ITEM(SUBCLASS_DPIO_MODULE, 0x1100)
    ITEM(SUBCLASS_PERFORMANCE_COUNTERS, 0x1101)
    ITEM(SUBCLASS_COMMUNICATION_SYNCHRONIZER, 0x1110)
    ITEM(SUBCLASS_SIGNAL_PROCESSING_MANAGEMENT, 0x1120)
    ITEM(SUBCLASS_SIGNAL_PROCESSING_CONTROLLER, 0x1180)
/* Processing Accelerators */
    ITEM(SUBCLASS_PROCESSING_ACCELERATORS, 0x1200)
    ITEM(SUBCLASS_AI_INFERENCE_ACCELERATOR, 0x1201)
ENDDEF(subclass)

STARTDEF(prog_interface)
/* Mass Storage Controller */
    ITEM(PROG_INTERFACE_IDE_INTERFACE_ISA, 0x010100)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_PCI, 0x010105)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_ISA_SWITCH_TO_PCI, 0x01010a)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_PCI_SWITCH_TO_ISA, 0x01010f)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_ISA_BUS_MASTERING, 0x010180)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_PCI_BUS_MASTERING, 0x010185)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_ISA_PCI_BUS_MASTERING, 0x01018a)
    ITEM(PROG_INTERFACE_IDE_INTERFACE_PCI_ISA_BUS_MASTERING, 0x01018f)
    ITEM(PROG_INTERFACE_ATA_CONTROLLER_ADMA_SINGLE_STEPPING, 0x010520)
    ITEM(PROG_INTERFACE_ATA_CONTROLLER_ADMA_CONTINUOUS_OP, 0x010530)
    ITEM(PROG_INTERFACE_SATA_CONTROLLER_VENDOR_SPECIFIC, 0x010600)
    ITEM(PROG_INTERFACE_SATA_CONTROLLER_AHCI, 0x010601)
    ITEM(PROG_INTERFACE_SATA_CONTROLLER_SSB, 0x010602)
    ITEM(PROG_INTERFACE_SAS_CONTROLLER_SSB, 0x010701)
    ITEM(PROG_INTERFACE_NVM_CONTROLLER_NVMHCI, 0x010801)
    ITEM(PROG_INTERFACE_NVM_CONTROLLER_NVME, 0x010802)
/* Display Controller */
    ITEM(PROG_INTERFACE_VGA_CONTROLLER, 0x030000)
    ITEM(PROG_INTERFACE_8514_CONTROLLER, 0x030001)
/* Bridge */
    ITEM(PROG_INTERFACE_PCI_BRIDGE_NORMAL_DECODE, 0x060400)
    ITEM(PROG_INTERFACE_PCI_BRIDGE_SUBTRACTIVE_DECODE, 0x060401)
    ITEM(PROG_INTERFACE_RACEWAY_BRIDGE_TRANSPARENT_MODE, 0x060800)
    ITEM(PROG_INTERFACE_RACEWAY_BRIDGE_ENDPOINT_MODE, 0x060801)
    ITEM(PROG_INTERFACE_SEMITRANSP_PCI2PCI_BRIDGE_PRIMARY, 0x060940)
    ITEM(PROG_INTERFACE_SEMITRANSP_PCI2PCI_BRIDGE_SECONDARY, 0x060980)
/* Communication Controller */
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_8250, 0x070000)
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_16450, 0x070001)
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_16550, 0x070002)
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_16650, 0x070003)
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_16750, 0x070004)
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_16850, 0x070005)
    ITEM(PROG_INTERFACE_SERIAL_CONTROLLER_16950, 0x070006)
    ITEM(PROG_INTERFACE_PARALLEL_CONTROLLER_SPP, 0x070100)
    ITEM(PROG_INTERFACE_PARALLEL_CONTROLLER_BIDIR, 0x070101)
    ITEM(PROG_INTERFACE_PARALLEL_CONTROLLER_ECP, 0x070102)
    ITEM(PROG_INTERFACE_PARALLEL_CONTROLLER_IEEE1284, 0x070103)
    ITEM(PROG_INTERFACE_PARALLEL_CONTROLLER_IEEE1284_TARGET, 0x0701fe)
    ITEM(PROG_INTERFACE_MODEM_GENERIC, 0x070300)
    ITEM(PROG_INTERFACE_MODEM_HAYES_16450, 0x070301)
    ITEM(PROG_INTERFACE_MODEM_HAYES_16550, 0x070302)
    ITEM(PROG_INTERFACE_MODEM_HAYES_16650, 0x070303)
    ITEM(PROG_INTERFACE_MODEM_HAYES_16750, 0x070304)
/* Generic System Peripheral */
    ITEM(PROG_INTERFACE_PIC_8259, 0x080000)
    ITEM(PROG_INTERFACE_PIC_ISA_PIC, 0x080001)
    ITEM(PROG_INTERFACE_PIC_EISA_PIC, 0x080002)
    ITEM(PROG_INTERFACE_PIC_IO_APIC, 0x080010)
    ITEM(PROG_INTERFACE_PIC_IO_X_APIC, 0x080020)
    ITEM(PROG_INTERFACE_DMA_CONTROLLER_8237, 0x080100)
    ITEM(PROG_INTERFACE_DMA_CONTROLLER_ISA_DMA, 0x080101)
    ITEM(PROG_INTERFACE_DMA_CONTROLLER_EISA_DMA, 0x080102)
    ITEM(PROG_INTERFACE_TIMER_8254, 0x080200)
    ITEM(PROG_INTERFACE_TIMER_ISA_TIMER, 0x080201)
    ITEM(PROG_INTERFACE_TIMER_EISA_TIMERS, 0x080202)
    ITEM(PROG_INTERFACE_TIMER_HPET, 0x080203)
    ITEM(PROG_INTERFACE_RTC_GENERIC, 0x080300)
    ITEM(PROG_INTERFACE_RTC_ISA_RTC, 0x080301)
    ITEM(PROG_INTERFACE_TIMING_CARD_TAP_TIMING_CARD, 0x089901)
/* Input Device Controller */
    ITEM(PROG_INTERFACE_GAMEPORT_CONTROLLER_GENERIC, 0x090400)
    ITEM(PROG_INTERFACE_GAMEPORT_CONTROLLER_EXTENDED, 0x090410)
/* Serial Bus Controller */
    ITEM(PROG_INTERFACE_FIREWIRE_GENERIC, 0x0c0000)
    ITEM(PROG_INTERFACE_FIREWIRE_OHCI, 0x0c0010)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_UHCI, 0x0c0300)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_OHCI, 0x0c0310)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_EHCI, 0x0c0320)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_XHCI, 0x0c0330)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_USB4_HOST_INTERFACE, 0x0c0340)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_UNSPECIFIED, 0x0c0380)
    ITEM(PROG_INTERFACE_USB_CONTROLLER_USB_DEVICE, 0x0c03fe)
    ITEM(PROG_INTERFACE_IPMI_INTERFACE_SMIC, 0x0c0700)
    ITEM(PROG_INTERFACE_IPMI_INTERFACE_KCS, 0x0c0701)
    ITEM(PROG_INTERFACE_IPMI_INTERFACE_BT_BLOCK_TRANSFER_, 0x0c0702)
ENDDEF(prog_interface)
